const firebaseConfig = {
  apiKey: "AIzaSyAUyd1dd5OKyfdo1L4bffiIekGqYW9Fqjc",
  authDomain: "clones-3ec8b.firebaseapp.com",
  databaseURL: "https://clones-3ec8b-default-rtdb.firebaseio.com",
  projectId: "clones-3ec8b",
  storageBucket: "clones-3ec8b.firebasestorage.app",
  messagingSenderId: "415064834438",
  appId: "1:415064834438:web:b5f94e248f976ea5ec2c07",
  measurementId: "G-ZHJWB1ZYVX"
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);

const cloneFormDB = firebase.database().ref("cloneForm");

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã
function getFormData() {
  const fields = ["org_name", "id_org", "app_code", "country", "fb_url", "deeplink_scheme", "captcha_domain", "captcha_key"];
  return Object.fromEntries(
    fields.map(field => [field, document.getElementById(field).value.trim()])
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
document.getElementById('cloneForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const formData = getFormData();

  try {
    if (currentEditKey) {
      await cloneFormDB.child(currentEditKey).update({ common: formData });
      showAlert("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!");
    } else {
      await cloneFormDB.push({ common: formData });
      showAlert("–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");
    }

    setTimeout(() => {
      document.getElementById('cloneModal').style.display = 'none';
    }, 3000);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }

  e.target.reset();
});

const getElementVal = (id) => document.getElementById(id).value;

// –í—ã—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
cloneFormDB.on('value', snapshot => {
  const clonesContainer = document.getElementById('clones-container');
  clonesContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

  const data = snapshot.val();
  if (!data) return;

  const fields = [
    { key: 'org_name', label: '–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏' },
    { key: 'id_org', label: 'ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏' },
    { key: 'app_code', label: '–ö–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è' },
    { key: 'country', label: '–°—Ç—Ä–∞–Ω–∞' },
    { key: 'fb_url', label: 'Url –ø—Ä–æ–µ–∫—Ç–∞ –≤ Google Firebase' },
    { key: 'deeplink_scheme', label: '–°—Ö–µ–º–∞ –¥–ª—è –¥–∏–ø–ª–∏–Ω–∫–æ–≤' },
    { key: 'captcha_domain', label: '–î–æ–º–µ–Ω –∫–∞–ø—á–∏' },
    { key: 'captcha_key', label: '–ö–ª—é—á –∫–∞–ø—á–∏' }
  ];

  // –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É
  const table = document.createElement('table');
  table.classList.add('clone-table');

  // –°–æ–∑–¥–∞—ë–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
  const thead = document.createElement('thead');
  const headerRow = document.createElement('tr');

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
  fields.forEach(field => {
    const th = document.createElement('th');
    th.textContent = field.label;
    headerRow.appendChild(th);
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
  const actionsHeader = document.createElement('th');
  actionsHeader.textContent = '–î–µ–π—Å—Ç–≤–∏—è';
  headerRow.appendChild(actionsHeader);

  thead.appendChild(headerRow);
  table.appendChild(thead);

  // –°–æ–∑–¥–∞—ë–º —Ç–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
  const tbody = document.createElement('tbody');

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
  Object.entries(data).forEach(([key, clone]) => {
    const row = document.createElement('tr');

    fields.forEach(field => {
      const td = document.createElement('td');
      if (field.key === 'fb_url') {
        const link = document.createElement('a');
        link.textContent = 'URL';
        link.href = clone.common[field.key] || '#';
        link.target = '_blank';
        td.appendChild(link);
      } else {
        td.textContent = clone.common[field.key] || '';
      }
      row.appendChild(td);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    const actionsCell = document.createElement('td');
    const actionsContainer = document.createElement('div');
    actionsContainer.classList.add('actions-container');

    const editButton = createButton('‚úèÔ∏è', 'edit-button', () => openCloneModal('edit', key, clone));
    const deleteButton = createButton('üóë', 'delete-button', () => deleteRecord(key, row));

    actionsContainer.append(editButton, deleteButton);
    actionsCell.appendChild(actionsContainer);
    row.appendChild(actionsCell);

    tbody.appendChild(row);
  });

  table.appendChild(tbody);
  clonesContainer.appendChild(table);
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
function createButton(text, className, onClick) {
  const button = document.createElement('button');
  button.textContent = text;
  button.classList.add(className);
  button.addEventListener('click', onClick);
  return button;
}

let currentKey = null; // –•—Ä–∞–Ω–∏—Ç –∫–ª—é—á –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
let currentRow = null; // –•—Ä–∞–Ω–∏—Ç —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
function showDeleteModal(key, row) {
  currentKey = key;
  currentRow = row;
  const modal = document.getElementById('deleteModal');
  modal.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
function hideDeleteModal() {
  const modal = document.getElementById('deleteModal');
  modal.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å" –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
document.getElementById('confirmDelete').addEventListener('click', () => {
  if (currentKey && currentRow) {
    // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ Firebase
    cloneFormDB.child(currentKey).remove()
      .then(() => {
        // –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        currentRow.remove();
        console.log('–ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞:', currentKey);
      })
      .catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:', error);
      });
  }
  hideDeleteModal(); // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞" –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
document.getElementById('cancelDelete').addEventListener('click', hideDeleteModal);

// –ò–∑–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ
function deleteRecord(key, row) {
  showDeleteModal(key, row); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
document.getElementById('openModalButton').addEventListener('click', () => {
  openCloneModal('add')
});

let currentEditKey = null; // –•—Ä–∞–Ω–∏—Ç –∫–ª—é—á –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—É—é —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openCloneModal(mode, key = null, clone = null) {
  const modal = document.getElementById('cloneModal');
  const modalTitle = document.getElementById('modalTitle');
  const submitButton = document.getElementById('submitButton');

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
  modalTitle.textContent = mode === 'add' ? '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å';
  submitButton.value = mode === 'add' ? '–î–æ–±–∞–≤–∏—Ç—å' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';

  // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –∏–ª–∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –µ—ë –¥–∞–Ω–Ω—ã–º–∏
  if (mode === 'add') {
    document.getElementById('cloneForm').reset(); // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    currentEditKey = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–ª—é—á —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  } else {
    currentEditKey = key;
    fillForm(clone.common); // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏
  }

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  modal.style.display = 'flex';
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
function fillForm(data) {
  const form = document.getElementById('cloneForm');
  Array.from(form.elements)
    .filter(element => element.tagName === 'INPUT' || element.tagName === 'SELECT')
    .forEach(element => {
      if (element.id in data) {
        element.value = data[element.id] || '';
      }
    });
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
document.querySelector('.close-modal').addEventListener('click', () => {
  const modal = document.getElementById('cloneModal');
  modal.style.display = 'none';
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
window.addEventListener('click', (event) => {
  const modal = document.getElementById('cloneModal');
  if (event.target === modal) {
    modal.style.display = 'none';
  }
});

//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
function showAlert(message) {
  const alert = document.getElementById('actionAlert');
  alert.textContent = message;
  alert.style.display = "block";
  alert.classList.remove('hide'); // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è

  setTimeout(() => {
    alert.classList.add('hide'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    setTimeout(() => {
      alert.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    }, 500); // –í—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
  }, 3000); // –í—Ä–µ–º—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
}